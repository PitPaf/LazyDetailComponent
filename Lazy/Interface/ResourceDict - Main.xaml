<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <!--STYLE: TextBlock-->
    <Style TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Interface/Fonts/#Dosis"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="#FFADADAD"/>
    </Style>

    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>

    <!--STYLE: validation-->
    <ControlTemplate x:Key="validationTemplate">
        <DockPanel>
            <TextBlock Foreground="Red" FontSize="20"></TextBlock>
            <AdornedElementPlaceholder/>
        </DockPanel>
    </ControlTemplate>
    
    <!--<ControlTemplate x:Key="validationTemplate">
        <DockPanel>
            <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
            <AdornedElementPlaceholder/>
        </DockPanel>
    </ControlTemplate>-->

    <!--STYLE: TextBox-->
    <Style x:Key="TextBox_Round_40" TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="Interface/Fonts/#Dosis"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Foreground" Value="#FF4E4E4E"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border x:Name="border" 
                            Background="White"
                            BorderBrush="Gray" 
                            CornerRadius="20"
                            BorderThickness="1" 
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" 
                          Focusable="False" 
                          VerticalAlignment="Center"
                          Margin="20,0,35,0"
                          HorizontalScrollBarVisibility="Hidden" 
                          VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}"/>
                        </Trigger>-->
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--#region COLOR-->
    <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
    <!--#endregion-->

    <!--Focus CheckBox-->
    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="CadetBlue" BorderThickness="2" Background="Transparent"
                             CornerRadius="10" Margin="-2" Opacity="0.5" 
                            Width="24" HorizontalAlignment="Left"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--STYLE: CheckBox-->
    <Style TargetType="CheckBox">
        <Setter Property="FontFamily" Value="Interface/Fonts/#Dosis"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="#FFADADAD"/>
        <Setter Property="BorderBrush" Value="#FFADADAD"/>
        <Setter Property="VerticalContentAlignment" Value="Bottom"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
    </Style>
    
    <!--TEMPLATE: CheckBox_Circle-->
    <ControlTemplate x:Key="CheckBox_Circle" TargetType="CheckBox">
        <Grid x:Name="templateRoot" Background="Transparent" >
            <Border x:Name="checkBoxBorder" 
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Background="White" 
                            Width="20" 
                            Height="20" 
                            CornerRadius="10"
                            BorderBrush="Gray" 
                            BorderThickness="1"/>
            <Path x:Name="optionMark" 
                          Data="M 5,10 L 9,14 L 15,7"
                                  Stroke="Gray"
                                  StrokeThickness="2"
                                  Fill="White" 
                                  Opacity="1" 
                                  Stretch="None"/>
            <ContentPresenter x:Name="contentPresenter" 
                                      Focusable="False" 
                                      HorizontalAlignment="Left" 
                                      Margin="30,3,15,0" 
                                      VerticalAlignment="Center"/>
        </Grid>
        <ControlTemplate.Triggers>
            <!--<Trigger Property="HasContent" Value="true">
                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                <Setter Property="Padding" Value="-10,-10,-10,-10"/>
            </Trigger>-->
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                <Setter Property="Stroke" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                <Setter Property="Stroke" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                <Setter Property="Stroke" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="false">
                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!--COLOR SETUP-->
    <SolidColorBrush x:Key="Button.Static.Background" Color="WhiteSmoke"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.Static.Foreground" Color="#FF4A4A4A"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="White"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Button.MouseOver.Foreground" Color="Black"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC5D7E2"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Button.Pressed.Foreground" Color="#FF4A4A4A"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFD2D2D2"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FFD2D2D2"/>

    <!--Focus Button-->
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="CadetBlue" BorderThickness="2" Background="Transparent"
                             CornerRadius="15" Margin="-2" Opacity="0.5"/>
                    <!--<Rectangle Margin="0" 
                               StrokeDashArray="1 2" 
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
                               SnapsToDevicePixels="true" 
                               StrokeThickness="1"/>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--STYLE: Button ButtonCircle_20-->
    <Style x:Key="ButtonCircle_20" TargetType="Button">
        <Setter Property="FontFamily" Value="Interface/Fonts/#Dosis"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource Button.Static.Foreground}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
    </Style>

    <!--STYLE: Button ButtonRound_100-->
    <Style x:Key="ButtonRound_100" TargetType="Button" BasedOn="{StaticResource ButtonCircle_20}">
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Opacity="0.2" ShadowDepth="3" BlurRadius="5"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Opacity="0.5" ShadowDepth="2" BlurRadius="3"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <TranslateTransform X="0" Y="0.5"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Opacity="0"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--TEMPLATE: Button ButtonRound-->
    <ControlTemplate x:Key="ButtonRound" TargetType="{x:Type Button}">
        <Border x:Name="border" 
                Background="{TemplateBinding Background}" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                CornerRadius="15" 
                Height="{TemplateBinding Height}" 
                Width="{TemplateBinding Width}">
            <ContentPresenter x:Name="contentPresenter" 
                              Focusable="False" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              Margin="{TemplateBinding Padding}" 
                              RecognizesAccessKey="True" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
            </ContentPresenter>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.MouseOver.Foreground}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Pressed.Foreground}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>